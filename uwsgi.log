*** Starting uWSGI 2.0.18 (64bit) on [Fri Apr 12 21:21:12 2019] ***
compiled with version: 7.3.0 on 12 April 2019 13:08:16
os: Linux-4.15.0-46-generic #49-Ubuntu SMP Wed Feb 6 09:33:07 UTC 2019
nodename: ubuntu
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/alonerevelry/Online_testing
writing pidfile to uwsgi.pid
detected binary path: /home/alonerevelry/.virtualenvs/env1/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
chdir() to /home/alonerevelry/Online_testing
your processes number limit is 31072
your memory page size is 4096 bytes
detected max file descriptor number: 1048576
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uWSGI http bound on 127.0.0.1:8080 fd 4
uwsgi socket 0 bound to TCP address 127.0.0.1:35921 (port auto-assigned) fd 3
Python version: 3.6.7 (default, Oct 22 2018, 11:32:17)  [GCC 8.2.0]
Set PythonHome to /home/alonerevelry/.virtualenvs/env1
Python main interpreter initialized at 0x562abf6d36a0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416720 bytes (406 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x562abf6d36a0 pid: 10676 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 10676)
spawned uWSGI worker 1 (pid: 10679, cores: 2)
spawned uWSGI worker 2 (pid: 10681, cores: 2)
spawned uWSGI worker 3 (pid: 10683, cores: 2)
spawned uWSGI worker 4 (pid: 10685, cores: 2)
spawned uWSGI http 1 (pid: 10687)
[pid: 10685|app: 0|req: 1/1] 127.0.0.1 () {38 vars in 696 bytes} [Fri Apr 12 21:21:31 2019] GET /login => generated 4888 bytes in 82 msecs (HTTP/1.1 200) 5 headers in 292 bytes (1 switches on core 0)
[pid: 10685|app: 0|req: 3/2] 127.0.0.1 () {38 vars in 689 bytes} [Fri Apr 12 21:21:31 2019] GET /static/css/style.css => generated 77 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 1)
[pid: 10685|app: 0|req: 3/3] 127.0.0.1 () {38 vars in 687 bytes} [Fri Apr 12 21:21:31 2019] GET /static/css/body.css => generated 77 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
[pid: 10685|app: 0|req: 4/4] 127.0.0.1 () {36 vars in 624 bytes} [Fri Apr 12 21:21:31 2019] GET /favicon.ico => generated 77 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 1)
SIGINT/SIGQUIT received...killing workers...
gateway "uWSGI http 1" has been buried (pid: 10687)
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.18 (64bit) on [Fri Apr 12 22:35:37 2019] ***
compiled with version: 7.3.0 on 12 April 2019 13:08:16
os: Linux-4.15.0-46-generic #49-Ubuntu SMP Wed Feb 6 09:33:07 UTC 2019
nodename: ubuntu
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/alonerevelry/Online_testing
writing pidfile to uwsgi.pid
detected binary path: /home/alonerevelry/.virtualenvs/env1/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
chdir() to /home/alonerevelry/Online_testing
your processes number limit is 31072
your memory page size is 4096 bytes
detected max file descriptor number: 1048576
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 127.0.0.1:8080 fd 3
Python version: 3.6.7 (default, Oct 22 2018, 11:32:17)  [GCC 8.2.0]
Set PythonHome to /home/alonerevelry/.virtualenvs/env1
Python main interpreter initialized at 0x556fb3fbb5a0
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416720 bytes (406 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x556fb3fbb5a0 pid: 15608 (default app)
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 15608)
spawned uWSGI worker 1 (pid: 15610, cores: 2)
spawned uWSGI worker 2 (pid: 15612, cores: 2)
spawned uWSGI worker 3 (pid: 15614, cores: 2)
spawned uWSGI worker 4 (pid: 15616, cores: 2)
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
invalid request block size: 21573 (max 4096)...skip
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
worker 2 buried after 1 seconds
worker 3 buried after 1 seconds
worker 4 buried after 1 seconds
goodbye to uWSGI.
